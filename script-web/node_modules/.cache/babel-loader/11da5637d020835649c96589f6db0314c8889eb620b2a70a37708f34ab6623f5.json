{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jjinj\\\\OneDrive\\\\Documents\\\\GitHub\\\\karkao_test\\\\script-web\\\\src\\\\components\\\\SelectBox.tsx\";\n// src/components/SelectBox.tsx\nimport React from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n    margin-bottom: 2.1em;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: inherit;\n    position: relative;\n`;\n_c = Container;\nconst Label = styled.label`\n    display: inline;\n    margin-bottom: 0.5em;\n    margin-right: 1em;\n    font-weight: bold;\n    color: white;\n`;\n_c2 = Label;\nconst SelectWrapper = styled.div`\n    position: relative;\n    width: 100%;\n\n    &::after {\n        content: '▼';\n        position: absolute;\n        top: 50%;\n        right: 10px; /* 화살표 위치 조정 */\n        transform: translateY(-50%);\n        pointer-events: none;\n    }\n`;\n_c3 = SelectWrapper;\nconst Select = styled.select`\n    width: 100%;\n    padding: 0.75em;\n    padding-right: 2em; /* 화살표와 겹치지 않도록 패딩 추가 */\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    transition: all 0.3s ease;\n    height: auto;\n    background-color: white;\n    color: ${({\n  isPlaceholder\n}) => isPlaceholder ? '#aaa' : 'black'}; /* 조건부 색상 변경 */\n\n    &:focus {\n        border-color: #007bff;\n        box-shadow: 0 0 8px rgba(0, 123, 255, 0.2);\n        outline: none;\n    }\n`;\n_c4 = Select;\nconst SelectBox = ({\n  label,\n  value,\n  options,\n  onChange\n}) => {\n  const isPlaceholder = value === '';\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Label, {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SelectWrapper, {\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        value: value,\n        onChange: onChange,\n        isPlaceholder: isPlaceholder,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          style: {\n            color: '#aaa'\n          },\n          children: \"Select an option\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), options.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option,\n          style: {\n            color: 'black'\n          },\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_c5 = SelectBox;\nexport default SelectBox;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Label\");\n$RefreshReg$(_c3, \"SelectWrapper\");\n$RefreshReg$(_c4, \"Select\");\n$RefreshReg$(_c5, \"SelectBox\");","map":{"version":3,"names":["React","styled","jsxDEV","_jsxDEV","Container","div","_c","Label","label","_c2","SelectWrapper","_c3","Select","select","isPlaceholder","_c4","SelectBox","value","options","onChange","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","map","option","index","_c5","$RefreshReg$"],"sources":["C:/Users/jjinj/OneDrive/Documents/GitHub/karkao_test/script-web/src/components/SelectBox.tsx"],"sourcesContent":["// src/components/SelectBox.tsx\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface SelectBoxProps {\r\n    label: string;\r\n    value: string;\r\n    options: string[];\r\n    onChange: (e: React.ChangeEvent<HTMLSelectElement>) => void;\r\n    disabled?: boolean;\r\n}\r\n\r\nconst Container = styled.div`\r\n    margin-bottom: 2.1em;\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-items: inherit;\r\n    position: relative;\r\n`;\r\n\r\nconst Label = styled.label`\r\n    display: inline;\r\n    margin-bottom: 0.5em;\r\n    margin-right: 1em;\r\n    font-weight: bold;\r\n    color: white;\r\n`;\r\n\r\nconst SelectWrapper = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n\r\n    &::after {\r\n        content: '▼';\r\n        position: absolute;\r\n        top: 50%;\r\n        right: 10px; /* 화살표 위치 조정 */\r\n        transform: translateY(-50%);\r\n        pointer-events: none;\r\n    }\r\n`;\r\n\r\nconst Select = styled.select<{ isPlaceholder: boolean }>`\r\n    width: 100%;\r\n    padding: 0.75em;\r\n    padding-right: 2em; /* 화살표와 겹치지 않도록 패딩 추가 */\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    transition: all 0.3s ease;\r\n    height: auto;\r\n    background-color: white;\r\n    color: ${({ isPlaceholder }) => (isPlaceholder ? '#aaa' : 'black')}; /* 조건부 색상 변경 */\r\n\r\n    &:focus {\r\n        border-color: #007bff;\r\n        box-shadow: 0 0 8px rgba(0, 123, 255, 0.2);\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst SelectBox: React.FC<SelectBoxProps> = ({ label, value, options, onChange }) => {\r\n    const isPlaceholder = value === '';\r\n\r\n    return (\r\n        <Container>\r\n            <Label>{label}</Label>\r\n            <SelectWrapper>\r\n                <Select value={value} onChange={onChange} isPlaceholder={isPlaceholder}>\r\n                    <option value=\"\" style={{ color: '#aaa' }}>\r\n                        Select an option\r\n                    </option>\r\n                    {options.map((option, index) => (\r\n                        <option key={index} value={option} style={{ color: 'black' }}>\r\n                            {option}\r\n                        </option>\r\n                    ))}\r\n                </Select>\r\n            </SelectWrapper>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default SelectBox;"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUvC,MAAMC,SAAS,GAAGH,MAAM,CAACI,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GARIF,SAAS;AAUf,MAAMG,KAAK,GAAGN,MAAM,CAACO,KAAK;AAC1B;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GANIF,KAAK;AAQX,MAAMG,aAAa,GAAGT,MAAM,CAACI,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACM,GAAA,GAZID,aAAa;AAcnB,MAAME,MAAM,GAAGX,MAAM,CAACY,MAAkC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,CAAC;EAAEC;AAAc,CAAC,KAAMA,aAAa,GAAG,MAAM,GAAG,OAAQ;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAhBIH,MAAM;AAkBZ,MAAMI,SAAmC,GAAGA,CAAC;EAAER,KAAK;EAAES,KAAK;EAAEC,OAAO;EAAEC;AAAS,CAAC,KAAK;EACjF,MAAML,aAAa,GAAGG,KAAK,KAAK,EAAE;EAElC,oBACId,OAAA,CAACC,SAAS;IAAAgB,QAAA,gBACNjB,OAAA,CAACI,KAAK;MAAAa,QAAA,EAAEZ;IAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACtBrB,OAAA,CAACO,aAAa;MAAAU,QAAA,eACVjB,OAAA,CAACS,MAAM;QAACK,KAAK,EAAEA,KAAM;QAACE,QAAQ,EAAEA,QAAS;QAACL,aAAa,EAAEA,aAAc;QAAAM,QAAA,gBACnEjB,OAAA;UAAQc,KAAK,EAAC,EAAE;UAACQ,KAAK,EAAE;YAAEC,KAAK,EAAE;UAAO,CAAE;UAAAN,QAAA,EAAC;QAE3C;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACRN,OAAO,CAACS,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACvB1B,OAAA;UAAoBc,KAAK,EAAEW,MAAO;UAACH,KAAK,EAAE;YAAEC,KAAK,EAAE;UAAQ,CAAE;UAAAN,QAAA,EACxDQ;QAAM,GADEC,KAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEpB,CAAC;AAACM,GAAA,GApBId,SAAmC;AAsBzC,eAAeA,SAAS;AAAC,IAAAV,EAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAI,GAAA,EAAAe,GAAA;AAAAC,YAAA,CAAAzB,EAAA;AAAAyB,YAAA,CAAAtB,GAAA;AAAAsB,YAAA,CAAApB,GAAA;AAAAoB,YAAA,CAAAhB,GAAA;AAAAgB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}