{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TFX255GS\\\\Desktop\\\\script-web\\\\src\\\\components\\\\ValidateButton.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = styled.button`\n  background-color: #dc3545;\n    color: white;\n    border: none;\n    padding: 0.75em 1.5em;\n    border-radius: 4px;\n    cursor: pointer;\n    font-size: 1em;\n    transition: all 0.001s ease-in;\n    margin: 0 1em;\n\n  &:hover {\n    background-color: #c82333;\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 8px rgba(220, 53, 69, 0.6);\n  }\n`;\n_c = Button;\nconst ValidateButton = ({\n  formData\n}) => {\n  const validate = () => {\n    let isValid = true;\n    const errors = [];\n    console.log(\"Access Key:\", formData.accessKey);\n    console.log(\"Secret Key:\", formData.secretKey);\n    const accessKeyPattern = /^[a-f0-9]{32}$/; // 사용자 액세스 키 패턴 (32자 16진수)\n    if (!formData.accessKey) {\n      isValid = false;\n      errors.push(\"사용자 액세스 키를 입력해주세요.\");\n    } else if (!accessKeyPattern.test(formData.accessKey)) {\n      isValid = false;\n      errors.push(\"사용자 액세스 키는 32자의 16진수여야 합니다.\");\n    }\n    const secretKeyPattern = /^[a-f0-9]{70}$/; // 사용자 액세스 보안 키 패턴 (64자 16진수)\n    if (!formData.secretKey) {\n      isValid = false;\n      errors.push(\"사용자 액세스 보안 키를 입력해주세요.\");\n    } else if (!secretKeyPattern.test(formData.secretKey)) {\n      isValid = false;\n      errors.push(\"사용자 액세스 보안 키는 70자의 16진수여야 합니다.\");\n    }\n    /*삭제해도 될거같음\r\n    if (!formData.email) {\r\n      isValid = false;\r\n      errors.push(\"사용자 이메일을 입력해주세요.\");\r\n    }\r\n    */\n    if (!formData.projectName) {\n      isValid = false;\n      errors.push(\"프로젝트 이름을 입력해주세요.\");\n      // 이 부분에 프로젝트 중 하나 인지 검증하는 코드 \n    }\n    if (!formData.clusterName) {\n      isValid = false;\n      errors.push(\"클러스터 이름을 입력해주세요.\");\n      // 이 부분에 클러스트 중 하나 인지 검증하는 코드\n    }\n    const apiEndpointPattern = /^(https?:\\/\\/)?([a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,}(:\\d{1,5})?(\\/.*)?$/;\n    if (!formData.apiEndpoint) {\n      isValid = false;\n      errors.push(\"클러스터의 API 엔드포인트를 입력해주세요.\");\n    } else if (!apiEndpointPattern.test(formData.apiEndpoint)) {\n      isValid = false;\n      errors.push(\"클러스터의 API 엔드포인트 형식이 올바르지 않습니다.\");\n    }\n    const authDataPattern = /^[A-Za-z0-9+/=]{1428}$/; // Base64 인코딩된 문자열 패턴 (1428자)\n    if (!formData.authData) {\n      isValid = false;\n      errors.push(\"클러스터의 certificate-authority-data를 입력해주세요.\");\n    } else if (!authDataPattern.test(formData.authData)) {\n      isValid = false;\n      errors.push(\"클러스터의 certificate-authority-data 형식이 올바르지 않습니다.\");\n    }\n\n    // Primary 엔드포인트 검증\n    // +SQL엔드 포인트 값 불러와서 비교해야댐 Primary와 Standby를 반대로 입력했는지 확인하는 코드\n    const sqlendpointPattern = /^[a-z0-9-]+\\.database\\.[a-f0-9]{32}\\.mysql\\.managed-service\\.[a-z0-9-]+\\.[a-z]{2,}\\.[a-z]+$/;\n    if (!formData.primaryEndpoint) {\n      isValid = false;\n      errors.push(\"Primary의 엔드포인트를 입력해주세요.\");\n    } else if (!sqlendpointPattern.test(formData.primaryEndpoint)) {\n      isValid = false;\n      errors.push(\"Primary의 엔드포인트 형식이 올바르지 않습니다.\");\n    }\n\n    // Standby 엔드포인트 검증\n    if (!formData.standbyEndpoint) {\n      isValid = false;\n      errors.push(\"Standby의 엔드포인트를 입력해주세요.\");\n    } else if (!sqlendpointPattern.test(formData.standbyEndpoint)) {\n      isValid = false;\n      errors.push(\"Standby의 엔드포인트 형식이 올바르지 않습니다.\");\n    }\n    if (!formData.dockerImageName) {\n      isValid = false;\n      errors.push(\"Docker Image 이름을 입력해주세요.\");\n    } else if (formData.dockerImageName !== \"demo-spring-boot\") {\n      isValid = false;\n      errors.push(\"Docker Image 이름은 'demo-spring-boot'이어야 합니다.\");\n    }\n\n    // Docker Java 버전 검증\n    if (!formData.dockerJavaVersion) {\n      isValid = false;\n      errors.push(\"Docker Image Base Java Version을 입력해주세요.\");\n    } else if (formData.dockerJavaVersion !== \"17-jdk-slim\") {\n      isValid = false;\n      errors.push(\"Docker Image Base Java Version은 '17-jdk-slim'이어야 합니다.\");\n    }\n    if (isValid) {\n      alert('검증 완료: 입력이 올바릅니다!');\n    } else {\n      alert(`Form has errors:\\n${errors.join('\\n')}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: validate,\n    children: \"\\uC720\\uD6A8\\uC131 \\uAC80\\uC0AC\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 10\n  }, this);\n};\n_c2 = ValidateButton;\nexport default ValidateButton;\nvar _c, _c2;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"ValidateButton\");","map":{"version":3,"names":["React","styled","jsxDEV","_jsxDEV","Button","button","_c","ValidateButton","formData","validate","isValid","errors","console","log","accessKey","secretKey","accessKeyPattern","push","test","secretKeyPattern","projectName","clusterName","apiEndpointPattern","apiEndpoint","authDataPattern","authData","sqlendpointPattern","primaryEndpoint","standbyEndpoint","dockerImageName","dockerJavaVersion","alert","join","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/Users/TFX255GS/Desktop/script-web/src/components/ValidateButton.tsx"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  background-color: #dc3545;\r\n    color: white;\r\n    border: none;\r\n    padding: 0.75em 1.5em;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n    font-size: 1em;\r\n    transition: all 0.001s ease-in;\r\n    margin: 0 1em;\r\n\r\n  &:hover {\r\n    background-color: #c82333;\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n    box-shadow: 0 0 8px rgba(220, 53, 69, 0.6);\r\n  }\r\n`;\r\n\r\ninterface ValidateButtonProps {\r\n  formData: {\r\n    accessKey: string;\r\n    secretKey: string;\r\n    email: string;\r\n    projectName: string;\r\n    clusterList: string;\r\n    clusterName: string;\r\n    apiEndpoint: string;\r\n    authData: string;\r\n    instanceList: string;\r\n    primaryEndpoint: string;\r\n    standbyEndpoint: string;\r\n    dockerImageName: string;\r\n    dockerJavaVersion: string;\r\n  };\r\n}\r\n\r\nconst ValidateButton: React.FC<ValidateButtonProps> = ({ formData }) => {\r\n  const validate = () => {\r\n    let isValid = true;\r\n    const errors = [];\r\n\r\n    console.log(\"Access Key:\", formData.accessKey);\r\n    console.log(\"Secret Key:\", formData.secretKey);\r\n\r\n    const accessKeyPattern = /^[a-f0-9]{32}$/; // 사용자 액세스 키 패턴 (32자 16진수)\r\n    if (!formData.accessKey) {\r\n        isValid = false;\r\n        errors.push(\"사용자 액세스 키를 입력해주세요.\");\r\n    } else if (!accessKeyPattern.test(formData.accessKey)) {\r\n        isValid = false;\r\n        errors.push(\"사용자 액세스 키는 32자의 16진수여야 합니다.\");\r\n    }\r\n\r\n    const secretKeyPattern = /^[a-f0-9]{70}$/; // 사용자 액세스 보안 키 패턴 (64자 16진수)\r\n    if (!formData.secretKey) {\r\n        isValid = false;\r\n        errors.push(\"사용자 액세스 보안 키를 입력해주세요.\");\r\n    } else if (!secretKeyPattern.test(formData.secretKey)) {\r\n        isValid = false;\r\n        errors.push(\"사용자 액세스 보안 키는 70자의 16진수여야 합니다.\");\r\n    }\r\n    /*삭제해도 될거같음\r\n    if (!formData.email) {\r\n      isValid = false;\r\n      errors.push(\"사용자 이메일을 입력해주세요.\");\r\n    }\r\n    */\r\n    if (!formData.projectName) {\r\n      isValid = false;\r\n      errors.push(\"프로젝트 이름을 입력해주세요.\");\r\n      // 이 부분에 프로젝트 중 하나 인지 검증하는 코드 \r\n    }\r\n    \r\n\r\n    if (!formData.clusterName) {\r\n        isValid = false;\r\n        errors.push(\"클러스터 이름을 입력해주세요.\");\r\n        // 이 부분에 클러스트 중 하나 인지 검증하는 코드\r\n      }\r\n    \r\n      const apiEndpointPattern = /^(https?:\\/\\/)?([a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,}(:\\d{1,5})?(\\/.*)?$/;\r\n    if (!formData.apiEndpoint) {\r\n        isValid = false;\r\n        errors.push(\"클러스터의 API 엔드포인트를 입력해주세요.\");\r\n    } else if (!apiEndpointPattern.test(formData.apiEndpoint)) {\r\n        isValid = false;\r\n        errors.push(\"클러스터의 API 엔드포인트 형식이 올바르지 않습니다.\");\r\n    }\r\n\r\n        const authDataPattern = /^[A-Za-z0-9+/=]{1428}$/; // Base64 인코딩된 문자열 패턴 (1428자)\r\n    if (!formData.authData) {\r\n        isValid = false;\r\n        errors.push(\"클러스터의 certificate-authority-data를 입력해주세요.\");\r\n    } else if (!authDataPattern.test(formData.authData)) {\r\n        isValid = false;\r\n        errors.push(\"클러스터의 certificate-authority-data 형식이 올바르지 않습니다.\");\r\n    }\r\n\r\n    // Primary 엔드포인트 검증\r\n    // +SQL엔드 포인트 값 불러와서 비교해야댐 Primary와 Standby를 반대로 입력했는지 확인하는 코드\r\n    const sqlendpointPattern = /^[a-z0-9-]+\\.database\\.[a-f0-9]{32}\\.mysql\\.managed-service\\.[a-z0-9-]+\\.[a-z]{2,}\\.[a-z]+$/;\r\n    if (!formData.primaryEndpoint) {\r\n        isValid = false;\r\n        errors.push(\"Primary의 엔드포인트를 입력해주세요.\");\r\n    } else if (!sqlendpointPattern.test(formData.primaryEndpoint)) {\r\n        isValid = false;\r\n        errors.push(\"Primary의 엔드포인트 형식이 올바르지 않습니다.\");\r\n    }\r\n\r\n    // Standby 엔드포인트 검증\r\n    if (!formData.standbyEndpoint) {\r\n        isValid = false;\r\n        errors.push(\"Standby의 엔드포인트를 입력해주세요.\");\r\n    } else if (!sqlendpointPattern.test(formData.standbyEndpoint)) {\r\n        isValid = false;\r\n        errors.push(\"Standby의 엔드포인트 형식이 올바르지 않습니다.\");\r\n    }\r\n\r\n    if (!formData.dockerImageName) {\r\n        isValid = false;\r\n        errors.push(\"Docker Image 이름을 입력해주세요.\");\r\n    } else if (formData.dockerImageName !== \"demo-spring-boot\") {\r\n        isValid = false;\r\n        errors.push(\"Docker Image 이름은 'demo-spring-boot'이어야 합니다.\");\r\n    }\r\n\r\n    // Docker Java 버전 검증\r\n    if (!formData.dockerJavaVersion) {\r\n        isValid = false;\r\n        errors.push(\"Docker Image Base Java Version을 입력해주세요.\");\r\n    } else if (formData.dockerJavaVersion !== \"17-jdk-slim\") {\r\n        isValid = false;\r\n        errors.push(\"Docker Image Base Java Version은 '17-jdk-slim'이어야 합니다.\");\r\n    }\r\n      \r\n\r\n    if (isValid) {\r\n      alert('검증 완료: 입력이 올바릅니다!');\r\n    } else {\r\n      alert(`Form has errors:\\n${errors.join('\\n')}`);\r\n    }\r\n  };\r\n\r\n  return <Button onClick={validate}>유효성 검사</Button>;\r\n};\r\n\r\nexport default ValidateButton;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}